---
title: "Chicken Noodle Cube"
date: "2025-03-01"
draft: true
categories: [living-doc, magic-the-gathering]
format:
  html:
    code-fold: true
---

This is an analysis of the [Chicken Noodle Cube](https://cubecobra.com/cube/overview/2d0fde97-e28c-4ba4-84fc-f271016e9578). This is a collection of Magic the Gathering cards I use to play with my friends. While this is a fufilling creative and social endeavor, it also presents me with a rich dataset.

I compiled the database ahead of time. See the shell scripts in the github repo.

Now, onto the analysis! `cards` is the main table we're working with

```{python}
import duckdb
import pandas as pd
import plotnine as pn
import seaborn as sns
from types import SimpleNamespace

cube = duckdb.connect("cube.duckdb")
cube.query("select * from cards limit 1").to_df().iloc[0]
```

(Boring style stuff)

```{python}
style = SimpleNamespace()
style.cmc_scale = {
    "Black": "black",
    "Blue": "blue",
    "Colorless": "grey",
    "Green": "green",
    "Red": "red",
    "White": "white",
    "Multicolored": "yellow"
}
```

Mana curves:

```{python}
(
    cube.query("""
    select color_category, cmc as cmc
    from cards 
    where color_category != 'Lands'
    """).to_df()
    .pipe(pn.ggplot, pn.aes(x="cmc", color="color_category")) 
    + pn.stat_ecdf()
    + pn.facet_wrap("color_category")
    + pn.scale_color_manual(style.cmc_scale)
    + pn.theme_minimal()
)
```

Cards I own:


```{python}
cube.query("select status, count(*) as num from cards where maybeboard_ind=False group by status")
```

Top keywords:

```{python}
(
    cube.query(""" 
    select 
        color_category
        , sum(COLUMNS(kw.* EXCLUDE (id)))
    from cards_with_info
    inner join keyword_counts as kw using(id)
    where 1=1
        and maybeboard_ind=False
        and cmc > 0
    group by color_category
    """).to_df().set_index("color_category").T
    # sort by most common
    .assign(total=lambda df: df.sum(axis=1))
    .sort_values("total", ascending=False)
    # show top 10
    .head(10).astype(int)
)
```

# Appendix

## Table descriptions

```{python}
cube.query("show tables")
```


```{python}
cube.query("describe cards")
```


```{python}
cube.query("describe scryfall")
```