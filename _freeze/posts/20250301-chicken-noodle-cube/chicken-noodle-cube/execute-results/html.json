{
  "hash": "c4798e07ac695d624e45a73545bdc696",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Chicken Noodle Cube (Magic The Gathering)\"\nformat: html\ndraft: true\n---\n\n\nThis is an analysis of the [Chicken Noodle Cube](https://cubecobra.com/cube/overview/2d0fde97-e28c-4ba4-84fc-f271016e9578). This is a collection of Magic the Gathering cards I use to play with my friends. While this is a fufilling creative and social endeavor, it also presents me with a rich dataset.\n\nI compiled the database ahead of time. See the shell scripts in the github repo.\n\nNow, onto the analysis! `cards` is the main table we're working with\n\n::: {#f138a033 .cell execution_count=1}\n``` {.python .cell-code}\nimport duckdb\nimport pandas as pd\nimport plotnine as pn\nimport seaborn as sns\nfrom types import SimpleNamespace\n\ncube = duckdb.connect(\"cube.duckdb\")\ncube.query(\"select * from cards limit 1\").to_df().iloc[0]\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nname                       Basri, Tomorrow's Champion\ncmc                                                 1\ncard_type           Legendary Creature - Human Knight\ncolor                                               W\nset                                               dft\ncollector_number                                    3\nrarity                                           rare\ncolor_category                                  White\nstatus                                          Owned\nmaybeboard_ind                                  False\nnotes                                            None\nName: 0, dtype: object\n```\n:::\n:::\n\n\n::: {#1eaa0b9e .cell execution_count=2}\n``` {.python .cell-code}\nstyle = SimpleNamespace()\nstyle.cmc_scale = {\n    \"Black\": \"black\",\n    \"Blue\": \"blue\",\n    \"Colorless\": \"grey\",\n    \"Green\": \"green\",\n    \"Red\": \"red\",\n    \"White\": \"white\",\n    \"Multicolored\": \"yellow\"\n}\n```\n:::\n\n\nMana curves:\n\n::: {#12257ea9 .cell execution_count=3}\n``` {.python .cell-code}\n(\n    cube.query(\"\"\"\n    select color_category, cmc as cmc\n    from cards \n    where color_category != 'Lands'\n    \"\"\").to_df()\n    .pipe(pn.ggplot, pn.aes(x=\"cmc\", color=\"color_category\")) \n    + pn.stat_ecdf()\n    + pn.facet_wrap(\"color_category\")\n    + pn.scale_color_manual(style.cmc_scale)\n    + pn.theme_minimal()\n)\n```\n\n::: {.cell-output .cell-output-display}\n![](chicken-noodle-cube_files/figure-html/cell-4-output-1.png){width=672 height=480}\n:::\n:::\n\n\nCards I own:\n\n::: {#f19f133f .cell execution_count=4}\n``` {.python .cell-code}\ncube.query(\"select status, count(*) as num from cards where maybeboard_ind=False group by status\")\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n┌───────────┬───────┐\n│  status   │  num  │\n│  varchar  │ int64 │\n├───────────┼───────┤\n│ Not Owned │     5 │\n│ Owned     │   367 │\n└───────────┴───────┘\n```\n:::\n:::\n\n\nKeywords\n\n::: {#2147b870 .cell execution_count=5}\n``` {.python .cell-code}\n(\n    cube.query(\"\"\" \n    select \n        color_category\n        , sum(COLUMNS(kw.* EXCLUDE (id)))\n    from cards_with_info\n    inner join keyword_counts as kw using(id)\n    where 1=1\n        and maybeboard_ind=False\n        and cmc > 0\n    group by color_category\n    \"\"\").to_df().set_index(\"color_category\").T\n    # sort by most common\n    .assign(total=lambda df: df.sum(axis=1))\n    .sort_values(\"total\", ascending=False)\n    # show top 10\n    .head(10).astype(int)\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>color_category</th>\n      <th>White</th>\n      <th>Black</th>\n      <th>Blue</th>\n      <th>Colorless</th>\n      <th>Red</th>\n      <th>Green</th>\n      <th>Multicolored</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>flying</th>\n      <td>8</td>\n      <td>5</td>\n      <td>15</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>11</td>\n      <td>43</td>\n    </tr>\n    <tr>\n      <th>cycling</th>\n      <td>6</td>\n      <td>1</td>\n      <td>8</td>\n      <td>0</td>\n      <td>5</td>\n      <td>5</td>\n      <td>0</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>kicker</th>\n      <td>5</td>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>4</td>\n      <td>4</td>\n      <td>0</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>raid</th>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>2</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>flash</th>\n      <td>4</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>haste</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>3</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>mill</th>\n      <td>0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>trample</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>3</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>deathtouch</th>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>enchant</th>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Appendix\n\n## Table descriptions\n\n::: {#6feaa894 .cell execution_count=6}\n``` {.python .cell-code}\ncube.query(\"show tables\")\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n┌─────────────────┐\n│      name       │\n│     varchar     │\n├─────────────────┤\n│ cards           │\n│ cards_with_info │\n│ keyword_counts  │\n│ lands           │\n│ scryfall        │\n│ spells          │\n└─────────────────┘\n```\n:::\n:::\n\n\n::: {#b0f2b1b8 .cell execution_count=7}\n``` {.python .cell-code}\ncube.query(\"describe cards\")\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n┌──────────────────┬─────────────┬─────────┬─────────┬─────────┬─────────┐\n│   column_name    │ column_type │  null   │   key   │ default │  extra  │\n│     varchar      │   varchar   │ varchar │ varchar │ varchar │ varchar │\n├──────────────────┼─────────────┼─────────┼─────────┼─────────┼─────────┤\n│ name             │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ cmc              │ BIGINT      │ YES     │ NULL    │ NULL    │ NULL    │\n│ card_type        │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ color            │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ set              │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ collector_number │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ rarity           │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ color_category   │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ status           │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ maybeboard_ind   │ BOOLEAN     │ YES     │ NULL    │ NULL    │ NULL    │\n│ notes            │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n├──────────────────┴─────────────┴─────────┴─────────┴─────────┴─────────┤\n│ 11 rows                                                      6 columns │\n└────────────────────────────────────────────────────────────────────────┘\n```\n:::\n:::\n\n\n::: {#a25c36f9 .cell execution_count=8}\n``` {.python .cell-code}\ncube.query(\"describe scryfall\")\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n┌─────────────┬─────────────┬─────────┬─────────┬─────────┬─────────┐\n│ column_name │ column_type │  null   │   key   │ default │  extra  │\n│   varchar   │   varchar   │ varchar │ varchar │ varchar │ varchar │\n├─────────────┼─────────────┼─────────┼─────────┼─────────┼─────────┤\n│ name        │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ id          │ UUID        │ YES     │ NULL    │ NULL    │ NULL    │\n│ type_line   │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ oracle_text │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ power       │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ toughness   │ VARCHAR     │ YES     │ NULL    │ NULL    │ NULL    │\n│ keywords    │ VARCHAR[]   │ YES     │ NULL    │ NULL    │ NULL    │\n│ price_usd   │ FLOAT       │ YES     │ NULL    │ NULL    │ NULL    │\n└─────────────┴─────────────┴─────────┴─────────┴─────────┴─────────┘\n```\n:::\n:::\n\n\n",
    "supporting": [
      "chicken-noodle-cube_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}